---
// Header.astro
// El par√°metro refresh es opcional y su valor por defecto es false

interface Props {
  title: string;
  refresh?: boolean;
}

const { title, refresh = false } = Astro.props; // refresh es false por defecto
---

<header class="header">
  <div class="recuadro">
    <button
      class="back-button"
      onclick="window.history.back();"
      oncontextmenu="return false;"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M15 18l-6-6 6-6"></path>
      </svg>
    </button>
  </div>
  <h1 class="header-title">{title}</h1>
  <div class="recuadro">
    {refresh && (
      <button class="refresh-button" onclick="window.location.reload();">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          height="24px"
          viewBox="0 -960 960 960"
          width="24px"
          fill="#5f6368"
        >
          <path d="M480-160q-134 0-227-93t-93-227q0-134 93-227t227-93q69 0 132 28.5T720-690v-110h80v280H520v-80h168q-32-56-87.5-88T480-720q-100 0-170 70t-70 170q0 100 70 170t170 70q77 0 139-44t87-116h84q-28 106-114 173t-196 67Z" />
        </svg>
      </button>
    )}
  </div>
</header>

<style>
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
    width: 100%;
    position: fixed;
    z-index: 1000;
    height: 84px;
  }

  .refresh-button,
  .back-button {
    outline: none;
    border: none;
    background-color: transparent;
  }

  .recuadro {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 15px;
    width: 24px;
  }

  .header-title {
    font-size: 1.5rem;
    font-weight: bold;
    margin: 0;
  }

  svg {
    width: 24px;
  }
</style>
