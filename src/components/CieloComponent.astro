---
// CieloComponent.astro
import EstrellaComponent from "./EstrellaComponent.astro";

const NUM_ESTRELLAS = 100;
const GRID_SIZE = 10; // 10x10 grid

function distribuirEstrellas(numEstrellas: any, gridSize: any) {
  const estrellas = [];
  const cellWidth = 100 / gridSize;
  const cellHeight = 100 / gridSize;
  const estrellasPerCell = Math.ceil(numEstrellas / (gridSize * gridSize));

  for (let i = 0; i < gridSize; i++) {
    for (let j = 0; j < gridSize; j++) {
      for (let k = 0; k < estrellasPerCell; k++) {
        if (estrellas.length >= numEstrellas) break;

        const top = i * cellHeight + Math.random() * cellHeight;
        const left = j * cellWidth + Math.random() * cellWidth;
        const baseOpacity = 1 - (top / 100) * 1.5;

        estrellas.push({
          id: estrellas.length,
          size: `${Math.random() * 10 + 5}px`,
          color: `rgba(255, 255, 255, ${baseOpacity})`,
          top: `${top}%`,
          left: `${left}%`,
          animationDuration: `${Math.random() * 3 + 2}s`,
          animationDelay: `${Math.random() * 5}s`,
        });
      }
    }
  }

  return estrellas;
}

const estrellas = distribuirEstrellas(NUM_ESTRELLAS, GRID_SIZE);
---

<div class="background">
  <svg class="ground" viewBox="0 0 1440 500">
    <path
      fill="#1a1a1a"
      d="M0,42.7l60,32c60,32,180,96,300,85.3c120-10.3,240-96.3,360-106.6c120-10.7,240,53.3,360,53.3s240-64,300-85.3,L1440,0v800H0V42.7z"
    ></path>
  </svg>
  {
    estrellas.map((estrella) => (
      <div
        class="estrella-wrapper"
        style={`top: ${estrella.top}; left: ${estrella.left}; animation-duration: ${estrella.animationDuration}; animation-delay: ${estrella.animationDelay};`}
      >
        <EstrellaComponent size={estrella.size} color={estrella.color} />
      </div>
    ))
  }
</div>

<style>
  .background {
    background: linear-gradient(180deg, #050827 0%, #20416e 100%);
    width: 100%;
    height: 100%;
    position: absolute; /* Para que ocupe todo el espacio de la sección */
    bottom: 0; /* Alinea el fondo en la parte superior */
    left: 0; /* Alinea el fondo en la parte izquierda */
    overflow: hidden;
    z-index: 0; /* Asegúrate de que el fondo esté detrás del contenido */
  }

  .ground {
    position: absolute;
    bottom: 0; /* Alinea el suelo en la parte inferior */
    width: 100%; /* Ancho completo */
    z-index: 1; /* Asegúrate de que el suelo esté por encima del fondo */
  }

  .estrella-wrapper {
    position: absolute;
    animation-name: twinkle;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease-in-out;
  }

  @keyframes twinkle {
    0% {
      opacity: 0.5;
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1.1);
    }
  }
</style>
