---
// DrawerComponent.astro
---

<div id="drawer-overlay"></div>
<div id="drawer">
  <nav>
    <ul>
      <li><a href="#home">Home</a></li>
      <li><a href="#about">About</a></li>
      <li><a href="#services">Services</a></li>
      <li><a href="#contact">Contact</a></li>
    </ul>
  </nav>
</div>

<style>
  #drawer-overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0);
    transition: background-color 0.3s ease-in-out;
    pointer-events: none;
    z-index: 40;
  }

  #drawer-overlay.active {
    background-color: rgba(0, 0, 0, 0.5);
    pointer-events: auto;
  }

  #drawer {
    position: fixed;
    top: 0;
    right: 0;
    height: 100%;
    width: 100%;
    max-width: 300px;
    background-color: white;
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
    transform: translateX(100%);
    transition: transform 0.3s ease-in-out;
    z-index: 50;
  }

  #drawer.open {
    transform: translateX(0);
  }

  nav {
    padding: 1rem;
  }

  ul {
    list-style-type: none;
    padding: 0;
  }

  li {
    margin-bottom: 0.5rem;
  }

  a {
    display: block;
    padding: 0.5rem 0;
    text-decoration: none;
    color: #333;
  }
</style>

<script>
  // Extender la interfaz Window
  declare global {
    interface Window {
      openDrawer: () => void;
    }
  }

  const drawer = document.getElementById("drawer");
  const overlay = document.getElementById("drawer-overlay");
  let startX: number;
  let currentX: number;

  function openDrawer() {
    if (drawer && overlay) {
      drawer.classList.add("open");
      overlay.classList.add("active");
    } else {
      console.error("Drawer or overlay element not found");
    }
  }

  function closeDrawer() {
    if (drawer && overlay) {
      drawer.classList.remove("open");
      overlay.classList.remove("active");
    } else {
      console.error("Drawer or overlay element not found");
    }
  }

  if (overlay) {
    overlay.addEventListener("click", closeDrawer);
  }

  if (drawer) {
    drawer.addEventListener("touchstart", (e) => {
      startX = e.touches[0].clientX;
    });

    drawer.addEventListener("touchmove", (e) => {
      currentX = e.touches[0].clientX;
      const diff = startX - currentX;
      if (diff < 0) {
        drawer.style.transform = `translateX(${-diff}px)`;
      }
    });

    drawer.addEventListener("touchend", () => {
      const diff = startX - currentX;
      if (diff < -50) {
        closeDrawer();
      } else {
        drawer.style.transform = "";
      }
    });
  }

  // Asignar la funciÃ³n openDrawer al objeto window
  window.openDrawer = openDrawer;
</script>
