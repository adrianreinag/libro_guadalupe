---
// index.astro
import BaseLayout from '../../../layouts/BaseLayout.astro';
import HeaderComponent from '../../../components/HeaderComponent.astro';

import leccionarioData from '../../../data/leccionario.json';
import { Leccionario } from '../../../classes/leccionario.ts';
import BodyLayout from '../../../layouts/BodyLayout.astro';

// Definir la estructura del tipo para los parámetros
interface Path {
  params: {
    dia: string;
  };
}

// Definir las rutas dinámicas que quieres generar
export async function getStaticPaths(): Promise<Path[]> {
  const dias = ['viernes', 'sabado', 'domingo'];

  const paths: Path[] = dias.map(dia => ({
    params: { dia }
  }));

  return paths;
}

// Obtener el parámetro de la ruta actual
const { dia } = Astro.params;

// Validar el tipo y el día
if (!['viernes', 'sabado', 'domingo'].includes(dia)) {
  throw new Error('Día no válido.');
}

// Obtener las lecturas del Leccionario según el día seleccionado
const getLecturas = (diaSeleccionado: string) => {
  return Leccionario.fromJSON(leccionarioData, diaSeleccionado);
};

const lecturas = getLecturas(dia);
---

<BaseLayout title="Eucaristía">
  <HeaderComponent title="Eucaristía"/>
  <BodyLayout>
    <h1 class="titulo-dia">XXVI semana del tiempo ordinario - {dia}</h1>
    <div>
      <nav class="tabbar">
        <button class="tab-item active selected" data-tab="lecturas">Lecturas</button>
        <button class="tab-item" data-tab="cantos">Cantos</button>
        <button class="tab-item" data-tab="oraciones">Oraciones</button>
      </nav>
      <div class="tab-content">
          <div id="lecturas" class="tab-pane active">
            <h2 class="titulo-seccion">Primera lectura</h2>
            <p class="comentario-derecha">{lecturas.primeraLectura.cita}</p>
            <h3 class="titulo-salmos">{lecturas.primeraLectura.titulo}</h3>
            <p set:html={lecturas.primeraLectura.texto} class="parrafo"></p>
        
            {lecturas.salmo && (
              <>
                <h2 class="titulo-seccion">Salmo responsorial</h2>
                <h3 class="titulo-salmos">Salmo {lecturas.salmo.titulo}</h3>
                <p class="parrafo"><span class="red">Ant. </span>{lecturas.salmo.antifona}</p>
                <div>
                  {lecturas.salmo.versos.map((verso: string, index: any) => (
                    <div class="verso-contenedor">
                      <p set:html={verso} class="parrafo"></p>
                    </div>
                  ))}
                </div>
              </>
            )}
        
            {lecturas.segundaLectura && (
              <>
                <h2 class="titulo-seccion">Segunda lectura</h2>
                <p class="comentario-derecha">{lecturas.segundaLectura.cita}</p>
                <h3 class="titulo-salmos">{lecturas.segundaLectura.titulo}</h3>
                <p set:html={lecturas.segundaLectura.texto} class="parrafo"></p>
              </>
            )}
        
            <h2 class="titulo-seccion">Evangelio</h2>
            <p class="comentario-derecha">{lecturas.evangelio.cita}</p>
            <h3 class="titulo-salmos">{lecturas.evangelio.titulo}</h3>
            <p set:html={lecturas.evangelio.texto} class="parrafo"></p>
          </div>
      </div>
      <div id="cantos" class="tab-pane">
          <h1>Cantos</h1>
          <p>Contenido de la sección de cantos...</p>
      </div>
      <div id="oraciones" class="tab-pane">
          <h1>Oraciones</h1>
          <p>Contenido de la sección de oraciones...</p>
      </div>
    </div>
  </BodyLayout>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
      const tabs = document.querySelectorAll('.tab-item');
      const tabPanes = document.querySelectorAll('.tab-pane');

      tabs.forEach(tab => {
          tab.addEventListener('click', () => {
              const targetTab = tab.getAttribute('data-tab');
              if (targetTab) {
                  tabs.forEach(t => {
                      t.classList.remove('active', 'selected');
                  });
                  tabPanes.forEach(pane => pane.classList.remove('active'));

                  tab.classList.add('active', 'selected');
                  const targetPane = document.getElementById(targetTab);
                  if (targetPane) {
                      targetPane.classList.add('active');
                  }
              }
          });
      });
  });
</script>
